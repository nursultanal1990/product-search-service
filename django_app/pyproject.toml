[tool.poetry]
name = "product-gateway-django"
version = "0.1.0"
description = ""
authors = [" "]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.2.1"
djangorestframework = "^3.16.0"
drf-yasg = "^1.21.10"
gunicorn = "^23.0.0"
psycopg2-binary = "^2.9.10"
python-dotenv = "^1.1.0"
split-settings = "^1.0.0"
django-extensions = "^4.1"
ipython = "^9.2.0"
loguru = "^0.7.3"
elasticsearch = "^9.0.1"
confluent-kafka = "^2.10.0"


[tool.poetry.group.lint.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.2.0"
pre-commit = "^4.2.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 119
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
line_length = 119
lines_after_imports = 2
lines_between_sections = 1
lines_between_types = 0
force_alphabetical_sort_within_sections = true
ensure_newline_before_comments = true
combine_as_imports = true
combine_star = true
skip_gitignore = true
balanced_wrapping = true
force_grid_wrap = 2
src_paths = ["app", ]
skip_glob = [
    ".git",
    ".idea",
    ".vscode",
    "venv",
    ".venv",
]
known_django = ["django", "rest_framework", "drf_yasg", "django_extensions"]
known_third_party = ["loguru", "gunicorn", "psycopg2_binary", "dotenv", "split_settings", "elasticsearch", "confluent_kafka"]
known_first_party = ["api", "common", "config", "deps", "infra", "service"]
sections = [
    "FUTURE",
    "STDLIB",
    "DJANGO",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]